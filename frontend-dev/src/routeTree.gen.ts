/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthorizedImport } from './routes/unauthorized'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedPilotagesUsersIndexImport } from './routes/_authenticated/pilotages/users/index'
import { Route as AuthenticatedPilotagesTeamsIndexImport } from './routes/_authenticated/pilotages/teams/index'
import { Route as AuthenticatedAdministrationsRolesIndexImport } from './routes/_authenticated/administrations/roles/index'
import { Route as GuestloginGuestLayoutLoginImport } from './routes/_guest/(login)/_guestLayout.login'
import { Route as AuthenticatedPilotagesUsersCreateImport } from './routes/_authenticated/pilotages/users/create'
import { Route as AuthenticatedPilotagesTeamsCreateImport } from './routes/_authenticated/pilotages/teams/create'
import { Route as AuthenticatedAdministrationsRolesCreateImport } from './routes/_authenticated/administrations/roles/create'
import { Route as AuthenticatedPilotagesTeamsUpdateIdImport } from './routes/_authenticated/pilotages/teams/update/$id'
import { Route as AuthenticatedAdministrationsRolesUpdateIdImport } from './routes/_authenticated/administrations/roles/update/$id'

// Create/Update Routes

const UnauthorizedRoute = UnauthorizedImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRoute,
} as any)

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedPilotagesUsersIndexRoute =
  AuthenticatedPilotagesUsersIndexImport.update({
    id: '/pilotages/users/',
    path: '/pilotages/users/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesTeamsIndexRoute =
  AuthenticatedPilotagesTeamsIndexImport.update({
    id: '/pilotages/teams/',
    path: '/pilotages/teams/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdministrationsRolesIndexRoute =
  AuthenticatedAdministrationsRolesIndexImport.update({
    id: '/administrations/roles/',
    path: '/administrations/roles/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const GuestloginGuestLayoutLoginRoute = GuestloginGuestLayoutLoginImport.update(
  {
    id: '/(login)/_guestLayout/login',
    path: '/login',
    getParentRoute: () => GuestRoute,
  } as any,
)

const AuthenticatedPilotagesUsersCreateRoute =
  AuthenticatedPilotagesUsersCreateImport.update({
    id: '/pilotages/users/create',
    path: '/pilotages/users/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesTeamsCreateRoute =
  AuthenticatedPilotagesTeamsCreateImport.update({
    id: '/pilotages/teams/create',
    path: '/pilotages/teams/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdministrationsRolesCreateRoute =
  AuthenticatedAdministrationsRolesCreateImport.update({
    id: '/administrations/roles/create',
    path: '/administrations/roles/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesTeamsUpdateIdRoute =
  AuthenticatedPilotagesTeamsUpdateIdImport.update({
    id: '/pilotages/teams/update/$id',
    path: '/pilotages/teams/update/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdministrationsRolesUpdateIdRoute =
  AuthenticatedAdministrationsRolesUpdateIdImport.update({
    id: '/administrations/roles/update/$id',
    path: '/administrations/roles/update/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/administrations/roles/create': {
      id: '/_authenticated/administrations/roles/create'
      path: '/administrations/roles/create'
      fullPath: '/administrations/roles/create'
      preLoaderRoute: typeof AuthenticatedAdministrationsRolesCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/teams/create': {
      id: '/_authenticated/pilotages/teams/create'
      path: '/pilotages/teams/create'
      fullPath: '/pilotages/teams/create'
      preLoaderRoute: typeof AuthenticatedPilotagesTeamsCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/users/create': {
      id: '/_authenticated/pilotages/users/create'
      path: '/pilotages/users/create'
      fullPath: '/pilotages/users/create'
      preLoaderRoute: typeof AuthenticatedPilotagesUsersCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_guest/(login)/_guestLayout/login': {
      id: '/_guest/(login)/_guestLayout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestloginGuestLayoutLoginImport
      parentRoute: typeof GuestImport
    }
    '/_authenticated/administrations/roles/': {
      id: '/_authenticated/administrations/roles/'
      path: '/administrations/roles'
      fullPath: '/administrations/roles'
      preLoaderRoute: typeof AuthenticatedAdministrationsRolesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/teams/': {
      id: '/_authenticated/pilotages/teams/'
      path: '/pilotages/teams'
      fullPath: '/pilotages/teams'
      preLoaderRoute: typeof AuthenticatedPilotagesTeamsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/users/': {
      id: '/_authenticated/pilotages/users/'
      path: '/pilotages/users'
      fullPath: '/pilotages/users'
      preLoaderRoute: typeof AuthenticatedPilotagesUsersIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/administrations/roles/update/$id': {
      id: '/_authenticated/administrations/roles/update/$id'
      path: '/administrations/roles/update/$id'
      fullPath: '/administrations/roles/update/$id'
      preLoaderRoute: typeof AuthenticatedAdministrationsRolesUpdateIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/teams/update/$id': {
      id: '/_authenticated/pilotages/teams/update/$id'
      path: '/pilotages/teams/update/$id'
      fullPath: '/pilotages/teams/update/$id'
      preLoaderRoute: typeof AuthenticatedPilotagesTeamsUpdateIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAdministrationsRolesCreateRoute: typeof AuthenticatedAdministrationsRolesCreateRoute
  AuthenticatedPilotagesTeamsCreateRoute: typeof AuthenticatedPilotagesTeamsCreateRoute
  AuthenticatedPilotagesUsersCreateRoute: typeof AuthenticatedPilotagesUsersCreateRoute
  AuthenticatedAdministrationsRolesIndexRoute: typeof AuthenticatedAdministrationsRolesIndexRoute
  AuthenticatedPilotagesTeamsIndexRoute: typeof AuthenticatedPilotagesTeamsIndexRoute
  AuthenticatedPilotagesUsersIndexRoute: typeof AuthenticatedPilotagesUsersIndexRoute
  AuthenticatedAdministrationsRolesUpdateIdRoute: typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  AuthenticatedPilotagesTeamsUpdateIdRoute: typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAdministrationsRolesCreateRoute:
    AuthenticatedAdministrationsRolesCreateRoute,
  AuthenticatedPilotagesTeamsCreateRoute:
    AuthenticatedPilotagesTeamsCreateRoute,
  AuthenticatedPilotagesUsersCreateRoute:
    AuthenticatedPilotagesUsersCreateRoute,
  AuthenticatedAdministrationsRolesIndexRoute:
    AuthenticatedAdministrationsRolesIndexRoute,
  AuthenticatedPilotagesTeamsIndexRoute: AuthenticatedPilotagesTeamsIndexRoute,
  AuthenticatedPilotagesUsersIndexRoute: AuthenticatedPilotagesUsersIndexRoute,
  AuthenticatedAdministrationsRolesUpdateIdRoute:
    AuthenticatedAdministrationsRolesUpdateIdRoute,
  AuthenticatedPilotagesTeamsUpdateIdRoute:
    AuthenticatedPilotagesTeamsUpdateIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface GuestRouteChildren {
  GuestloginGuestLayoutLoginRoute: typeof GuestloginGuestLayoutLoginRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestloginGuestLayoutLoginRoute: GuestloginGuestLayoutLoginRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof GuestRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/': typeof AuthenticatedIndexRoute
  '/administrations/roles/create': typeof AuthenticatedAdministrationsRolesCreateRoute
  '/pilotages/teams/create': typeof AuthenticatedPilotagesTeamsCreateRoute
  '/pilotages/users/create': typeof AuthenticatedPilotagesUsersCreateRoute
  '/login': typeof GuestloginGuestLayoutLoginRoute
  '/administrations/roles': typeof AuthenticatedAdministrationsRolesIndexRoute
  '/pilotages/teams': typeof AuthenticatedPilotagesTeamsIndexRoute
  '/pilotages/users': typeof AuthenticatedPilotagesUsersIndexRoute
  '/administrations/roles/update/$id': typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  '/pilotages/teams/update/$id': typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

export interface FileRoutesByTo {
  '': typeof GuestRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/': typeof AuthenticatedIndexRoute
  '/administrations/roles/create': typeof AuthenticatedAdministrationsRolesCreateRoute
  '/pilotages/teams/create': typeof AuthenticatedPilotagesTeamsCreateRoute
  '/pilotages/users/create': typeof AuthenticatedPilotagesUsersCreateRoute
  '/login': typeof GuestloginGuestLayoutLoginRoute
  '/administrations/roles': typeof AuthenticatedAdministrationsRolesIndexRoute
  '/pilotages/teams': typeof AuthenticatedPilotagesTeamsIndexRoute
  '/pilotages/users': typeof AuthenticatedPilotagesUsersIndexRoute
  '/administrations/roles/update/$id': typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  '/pilotages/teams/update/$id': typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_authenticated/administrations/roles/create': typeof AuthenticatedAdministrationsRolesCreateRoute
  '/_authenticated/pilotages/teams/create': typeof AuthenticatedPilotagesTeamsCreateRoute
  '/_authenticated/pilotages/users/create': typeof AuthenticatedPilotagesUsersCreateRoute
  '/_guest/(login)/_guestLayout/login': typeof GuestloginGuestLayoutLoginRoute
  '/_authenticated/administrations/roles/': typeof AuthenticatedAdministrationsRolesIndexRoute
  '/_authenticated/pilotages/teams/': typeof AuthenticatedPilotagesTeamsIndexRoute
  '/_authenticated/pilotages/users/': typeof AuthenticatedPilotagesUsersIndexRoute
  '/_authenticated/administrations/roles/update/$id': typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  '/_authenticated/pilotages/teams/update/$id': typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/unauthorized'
    | '/'
    | '/administrations/roles/create'
    | '/pilotages/teams/create'
    | '/pilotages/users/create'
    | '/login'
    | '/administrations/roles'
    | '/pilotages/teams'
    | '/pilotages/users'
    | '/administrations/roles/update/$id'
    | '/pilotages/teams/update/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/unauthorized'
    | '/'
    | '/administrations/roles/create'
    | '/pilotages/teams/create'
    | '/pilotages/users/create'
    | '/login'
    | '/administrations/roles'
    | '/pilotages/teams'
    | '/pilotages/users'
    | '/administrations/roles/update/$id'
    | '/pilotages/teams/update/$id'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_guest'
    | '/unauthorized'
    | '/_authenticated/'
    | '/_authenticated/administrations/roles/create'
    | '/_authenticated/pilotages/teams/create'
    | '/_authenticated/pilotages/users/create'
    | '/_guest/(login)/_guestLayout/login'
    | '/_authenticated/administrations/roles/'
    | '/_authenticated/pilotages/teams/'
    | '/_authenticated/pilotages/users/'
    | '/_authenticated/administrations/roles/update/$id'
    | '/_authenticated/pilotages/teams/update/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
  UnauthorizedRoute: typeof UnauthorizedRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
  UnauthorizedRoute: UnauthorizedRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_guest",
        "/unauthorized"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/administrations/roles/create",
        "/_authenticated/pilotages/teams/create",
        "/_authenticated/pilotages/users/create",
        "/_authenticated/administrations/roles/",
        "/_authenticated/pilotages/teams/",
        "/_authenticated/pilotages/users/",
        "/_authenticated/administrations/roles/update/$id",
        "/_authenticated/pilotages/teams/update/$id"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/(login)/_guestLayout/login"
      ]
    },
    "/unauthorized": {
      "filePath": "unauthorized.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/administrations/roles/create": {
      "filePath": "_authenticated/administrations/roles/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/teams/create": {
      "filePath": "_authenticated/pilotages/teams/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/users/create": {
      "filePath": "_authenticated/pilotages/users/create.tsx",
      "parent": "/_authenticated"
    },
    "/_guest/(login)/_guestLayout/login": {
      "filePath": "_guest/(login)/_guestLayout.login.tsx",
      "parent": "/_guest"
    },
    "/_authenticated/administrations/roles/": {
      "filePath": "_authenticated/administrations/roles/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/teams/": {
      "filePath": "_authenticated/pilotages/teams/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/users/": {
      "filePath": "_authenticated/pilotages/users/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/administrations/roles/update/$id": {
      "filePath": "_authenticated/administrations/roles/update/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/teams/update/$id": {
      "filePath": "_authenticated/pilotages/teams/update/$id.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
