/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UnauthorizedImport } from './routes/unauthorized'
import { Route as GuestImport } from './routes/_guest'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedProfileIndexImport } from './routes/_authenticated/profile/index'
import { Route as GuestVerifyEmailTokenImport } from './routes/_guest/verify-email/$token'
import { Route as GuestloginTwoFactorImport } from './routes/_guest/(login)/two-factor'
import { Route as GuestloginLoginImport } from './routes/_guest/(login)/login'
import { Route as AuthenticatedPilotagesUsersIndexImport } from './routes/_authenticated/pilotages/users/index'
import { Route as AuthenticatedPilotagesTeamsIndexImport } from './routes/_authenticated/pilotages/teams/index'
import { Route as AuthenticatedPilotagesServicesIndexImport } from './routes/_authenticated/pilotages/services/index'
import { Route as AuthenticatedPilotagesSectorsIndexImport } from './routes/_authenticated/pilotages/sectors/index'
import { Route as AuthenticatedPilotagesHolidaysIndexImport } from './routes/_authenticated/pilotages/holidays/index'
import { Route as AuthenticatedAdministrationsRolesIndexImport } from './routes/_authenticated/administrations/roles/index'
import { Route as AuthenticatedPilotagesUsersCreateImport } from './routes/_authenticated/pilotages/users/create'
import { Route as AuthenticatedPilotagesTeamsCreateImport } from './routes/_authenticated/pilotages/teams/create'
import { Route as AuthenticatedPilotagesServicesCreateImport } from './routes/_authenticated/pilotages/services/create'
import { Route as AuthenticatedPilotagesSectorsCreateImport } from './routes/_authenticated/pilotages/sectors/create'
import { Route as AuthenticatedPilotagesHolidaysCreateImport } from './routes/_authenticated/pilotages/holidays/create'
import { Route as AuthenticatedAdministrationsRolesCreateImport } from './routes/_authenticated/administrations/roles/create'
import { Route as AuthenticatedPilotagesTeamsUpdateIdImport } from './routes/_authenticated/pilotages/teams/update/$id'
import { Route as AuthenticatedPilotagesServicesUpdateIdImport } from './routes/_authenticated/pilotages/services/update/$id'
import { Route as AuthenticatedPilotagesSectorsUpdateIdImport } from './routes/_authenticated/pilotages/sectors/update/$id'
import { Route as AuthenticatedPilotagesHolidaysUpdateIdImport } from './routes/_authenticated/pilotages/holidays/update/$id'
import { Route as AuthenticatedAdministrationsRolesUpdateIdImport } from './routes/_authenticated/administrations/roles/update/$id'

// Create/Update Routes

const UnauthorizedRoute = UnauthorizedImport.update({
  id: '/unauthorized',
  path: '/unauthorized',
  getParentRoute: () => rootRoute,
} as any)

const GuestRoute = GuestImport.update({
  id: '/_guest',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedProfileIndexRoute = AuthenticatedProfileIndexImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const GuestVerifyEmailTokenRoute = GuestVerifyEmailTokenImport.update({
  id: '/verify-email/$token',
  path: '/verify-email/$token',
  getParentRoute: () => GuestRoute,
} as any)

const GuestloginTwoFactorRoute = GuestloginTwoFactorImport.update({
  id: '/(login)/two-factor',
  path: '/two-factor',
  getParentRoute: () => GuestRoute,
} as any)

const GuestloginLoginRoute = GuestloginLoginImport.update({
  id: '/(login)/login',
  path: '/login',
  getParentRoute: () => GuestRoute,
} as any)

const AuthenticatedPilotagesUsersIndexRoute =
  AuthenticatedPilotagesUsersIndexImport.update({
    id: '/pilotages/users/',
    path: '/pilotages/users/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesTeamsIndexRoute =
  AuthenticatedPilotagesTeamsIndexImport.update({
    id: '/pilotages/teams/',
    path: '/pilotages/teams/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesServicesIndexRoute =
  AuthenticatedPilotagesServicesIndexImport.update({
    id: '/pilotages/services/',
    path: '/pilotages/services/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesSectorsIndexRoute =
  AuthenticatedPilotagesSectorsIndexImport.update({
    id: '/pilotages/sectors/',
    path: '/pilotages/sectors/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesHolidaysIndexRoute =
  AuthenticatedPilotagesHolidaysIndexImport.update({
    id: '/pilotages/holidays/',
    path: '/pilotages/holidays/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdministrationsRolesIndexRoute =
  AuthenticatedAdministrationsRolesIndexImport.update({
    id: '/administrations/roles/',
    path: '/administrations/roles/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesUsersCreateRoute =
  AuthenticatedPilotagesUsersCreateImport.update({
    id: '/pilotages/users/create',
    path: '/pilotages/users/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesTeamsCreateRoute =
  AuthenticatedPilotagesTeamsCreateImport.update({
    id: '/pilotages/teams/create',
    path: '/pilotages/teams/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesServicesCreateRoute =
  AuthenticatedPilotagesServicesCreateImport.update({
    id: '/pilotages/services/create',
    path: '/pilotages/services/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesSectorsCreateRoute =
  AuthenticatedPilotagesSectorsCreateImport.update({
    id: '/pilotages/sectors/create',
    path: '/pilotages/sectors/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesHolidaysCreateRoute =
  AuthenticatedPilotagesHolidaysCreateImport.update({
    id: '/pilotages/holidays/create',
    path: '/pilotages/holidays/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdministrationsRolesCreateRoute =
  AuthenticatedAdministrationsRolesCreateImport.update({
    id: '/administrations/roles/create',
    path: '/administrations/roles/create',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesTeamsUpdateIdRoute =
  AuthenticatedPilotagesTeamsUpdateIdImport.update({
    id: '/pilotages/teams/update/$id',
    path: '/pilotages/teams/update/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesServicesUpdateIdRoute =
  AuthenticatedPilotagesServicesUpdateIdImport.update({
    id: '/pilotages/services/update/$id',
    path: '/pilotages/services/update/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesSectorsUpdateIdRoute =
  AuthenticatedPilotagesSectorsUpdateIdImport.update({
    id: '/pilotages/sectors/update/$id',
    path: '/pilotages/sectors/update/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedPilotagesHolidaysUpdateIdRoute =
  AuthenticatedPilotagesHolidaysUpdateIdImport.update({
    id: '/pilotages/holidays/update/$id',
    path: '/pilotages/holidays/update/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedAdministrationsRolesUpdateIdRoute =
  AuthenticatedAdministrationsRolesUpdateIdImport.update({
    id: '/administrations/roles/update/$id',
    path: '/administrations/roles/update/$id',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/_guest': {
      id: '/_guest'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof GuestImport
      parentRoute: typeof rootRoute
    }
    '/unauthorized': {
      id: '/unauthorized'
      path: '/unauthorized'
      fullPath: '/unauthorized'
      preLoaderRoute: typeof UnauthorizedImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_guest/(login)/login': {
      id: '/_guest/(login)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof GuestloginLoginImport
      parentRoute: typeof GuestImport
    }
    '/_guest/(login)/two-factor': {
      id: '/_guest/(login)/two-factor'
      path: '/two-factor'
      fullPath: '/two-factor'
      preLoaderRoute: typeof GuestloginTwoFactorImport
      parentRoute: typeof GuestImport
    }
    '/_guest/verify-email/$token': {
      id: '/_guest/verify-email/$token'
      path: '/verify-email/$token'
      fullPath: '/verify-email/$token'
      preLoaderRoute: typeof GuestVerifyEmailTokenImport
      parentRoute: typeof GuestImport
    }
    '/_authenticated/profile/': {
      id: '/_authenticated/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/administrations/roles/create': {
      id: '/_authenticated/administrations/roles/create'
      path: '/administrations/roles/create'
      fullPath: '/administrations/roles/create'
      preLoaderRoute: typeof AuthenticatedAdministrationsRolesCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/holidays/create': {
      id: '/_authenticated/pilotages/holidays/create'
      path: '/pilotages/holidays/create'
      fullPath: '/pilotages/holidays/create'
      preLoaderRoute: typeof AuthenticatedPilotagesHolidaysCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/sectors/create': {
      id: '/_authenticated/pilotages/sectors/create'
      path: '/pilotages/sectors/create'
      fullPath: '/pilotages/sectors/create'
      preLoaderRoute: typeof AuthenticatedPilotagesSectorsCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/services/create': {
      id: '/_authenticated/pilotages/services/create'
      path: '/pilotages/services/create'
      fullPath: '/pilotages/services/create'
      preLoaderRoute: typeof AuthenticatedPilotagesServicesCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/teams/create': {
      id: '/_authenticated/pilotages/teams/create'
      path: '/pilotages/teams/create'
      fullPath: '/pilotages/teams/create'
      preLoaderRoute: typeof AuthenticatedPilotagesTeamsCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/users/create': {
      id: '/_authenticated/pilotages/users/create'
      path: '/pilotages/users/create'
      fullPath: '/pilotages/users/create'
      preLoaderRoute: typeof AuthenticatedPilotagesUsersCreateImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/administrations/roles/': {
      id: '/_authenticated/administrations/roles/'
      path: '/administrations/roles'
      fullPath: '/administrations/roles'
      preLoaderRoute: typeof AuthenticatedAdministrationsRolesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/holidays/': {
      id: '/_authenticated/pilotages/holidays/'
      path: '/pilotages/holidays'
      fullPath: '/pilotages/holidays'
      preLoaderRoute: typeof AuthenticatedPilotagesHolidaysIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/sectors/': {
      id: '/_authenticated/pilotages/sectors/'
      path: '/pilotages/sectors'
      fullPath: '/pilotages/sectors'
      preLoaderRoute: typeof AuthenticatedPilotagesSectorsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/services/': {
      id: '/_authenticated/pilotages/services/'
      path: '/pilotages/services'
      fullPath: '/pilotages/services'
      preLoaderRoute: typeof AuthenticatedPilotagesServicesIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/teams/': {
      id: '/_authenticated/pilotages/teams/'
      path: '/pilotages/teams'
      fullPath: '/pilotages/teams'
      preLoaderRoute: typeof AuthenticatedPilotagesTeamsIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/users/': {
      id: '/_authenticated/pilotages/users/'
      path: '/pilotages/users'
      fullPath: '/pilotages/users'
      preLoaderRoute: typeof AuthenticatedPilotagesUsersIndexImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/administrations/roles/update/$id': {
      id: '/_authenticated/administrations/roles/update/$id'
      path: '/administrations/roles/update/$id'
      fullPath: '/administrations/roles/update/$id'
      preLoaderRoute: typeof AuthenticatedAdministrationsRolesUpdateIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/holidays/update/$id': {
      id: '/_authenticated/pilotages/holidays/update/$id'
      path: '/pilotages/holidays/update/$id'
      fullPath: '/pilotages/holidays/update/$id'
      preLoaderRoute: typeof AuthenticatedPilotagesHolidaysUpdateIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/sectors/update/$id': {
      id: '/_authenticated/pilotages/sectors/update/$id'
      path: '/pilotages/sectors/update/$id'
      fullPath: '/pilotages/sectors/update/$id'
      preLoaderRoute: typeof AuthenticatedPilotagesSectorsUpdateIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/services/update/$id': {
      id: '/_authenticated/pilotages/services/update/$id'
      path: '/pilotages/services/update/$id'
      fullPath: '/pilotages/services/update/$id'
      preLoaderRoute: typeof AuthenticatedPilotagesServicesUpdateIdImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/pilotages/teams/update/$id': {
      id: '/_authenticated/pilotages/teams/update/$id'
      path: '/pilotages/teams/update/$id'
      fullPath: '/pilotages/teams/update/$id'
      preLoaderRoute: typeof AuthenticatedPilotagesTeamsUpdateIdImport
      parentRoute: typeof AuthenticatedImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedProfileIndexRoute: typeof AuthenticatedProfileIndexRoute
  AuthenticatedAdministrationsRolesCreateRoute: typeof AuthenticatedAdministrationsRolesCreateRoute
  AuthenticatedPilotagesHolidaysCreateRoute: typeof AuthenticatedPilotagesHolidaysCreateRoute
  AuthenticatedPilotagesSectorsCreateRoute: typeof AuthenticatedPilotagesSectorsCreateRoute
  AuthenticatedPilotagesServicesCreateRoute: typeof AuthenticatedPilotagesServicesCreateRoute
  AuthenticatedPilotagesTeamsCreateRoute: typeof AuthenticatedPilotagesTeamsCreateRoute
  AuthenticatedPilotagesUsersCreateRoute: typeof AuthenticatedPilotagesUsersCreateRoute
  AuthenticatedAdministrationsRolesIndexRoute: typeof AuthenticatedAdministrationsRolesIndexRoute
  AuthenticatedPilotagesHolidaysIndexRoute: typeof AuthenticatedPilotagesHolidaysIndexRoute
  AuthenticatedPilotagesSectorsIndexRoute: typeof AuthenticatedPilotagesSectorsIndexRoute
  AuthenticatedPilotagesServicesIndexRoute: typeof AuthenticatedPilotagesServicesIndexRoute
  AuthenticatedPilotagesTeamsIndexRoute: typeof AuthenticatedPilotagesTeamsIndexRoute
  AuthenticatedPilotagesUsersIndexRoute: typeof AuthenticatedPilotagesUsersIndexRoute
  AuthenticatedAdministrationsRolesUpdateIdRoute: typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  AuthenticatedPilotagesHolidaysUpdateIdRoute: typeof AuthenticatedPilotagesHolidaysUpdateIdRoute
  AuthenticatedPilotagesSectorsUpdateIdRoute: typeof AuthenticatedPilotagesSectorsUpdateIdRoute
  AuthenticatedPilotagesServicesUpdateIdRoute: typeof AuthenticatedPilotagesServicesUpdateIdRoute
  AuthenticatedPilotagesTeamsUpdateIdRoute: typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedProfileIndexRoute: AuthenticatedProfileIndexRoute,
  AuthenticatedAdministrationsRolesCreateRoute:
    AuthenticatedAdministrationsRolesCreateRoute,
  AuthenticatedPilotagesHolidaysCreateRoute:
    AuthenticatedPilotagesHolidaysCreateRoute,
  AuthenticatedPilotagesSectorsCreateRoute:
    AuthenticatedPilotagesSectorsCreateRoute,
  AuthenticatedPilotagesServicesCreateRoute:
    AuthenticatedPilotagesServicesCreateRoute,
  AuthenticatedPilotagesTeamsCreateRoute:
    AuthenticatedPilotagesTeamsCreateRoute,
  AuthenticatedPilotagesUsersCreateRoute:
    AuthenticatedPilotagesUsersCreateRoute,
  AuthenticatedAdministrationsRolesIndexRoute:
    AuthenticatedAdministrationsRolesIndexRoute,
  AuthenticatedPilotagesHolidaysIndexRoute:
    AuthenticatedPilotagesHolidaysIndexRoute,
  AuthenticatedPilotagesSectorsIndexRoute:
    AuthenticatedPilotagesSectorsIndexRoute,
  AuthenticatedPilotagesServicesIndexRoute:
    AuthenticatedPilotagesServicesIndexRoute,
  AuthenticatedPilotagesTeamsIndexRoute: AuthenticatedPilotagesTeamsIndexRoute,
  AuthenticatedPilotagesUsersIndexRoute: AuthenticatedPilotagesUsersIndexRoute,
  AuthenticatedAdministrationsRolesUpdateIdRoute:
    AuthenticatedAdministrationsRolesUpdateIdRoute,
  AuthenticatedPilotagesHolidaysUpdateIdRoute:
    AuthenticatedPilotagesHolidaysUpdateIdRoute,
  AuthenticatedPilotagesSectorsUpdateIdRoute:
    AuthenticatedPilotagesSectorsUpdateIdRoute,
  AuthenticatedPilotagesServicesUpdateIdRoute:
    AuthenticatedPilotagesServicesUpdateIdRoute,
  AuthenticatedPilotagesTeamsUpdateIdRoute:
    AuthenticatedPilotagesTeamsUpdateIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

interface GuestRouteChildren {
  GuestloginLoginRoute: typeof GuestloginLoginRoute
  GuestloginTwoFactorRoute: typeof GuestloginTwoFactorRoute
  GuestVerifyEmailTokenRoute: typeof GuestVerifyEmailTokenRoute
}

const GuestRouteChildren: GuestRouteChildren = {
  GuestloginLoginRoute: GuestloginLoginRoute,
  GuestloginTwoFactorRoute: GuestloginTwoFactorRoute,
  GuestVerifyEmailTokenRoute: GuestVerifyEmailTokenRoute,
}

const GuestRouteWithChildren = GuestRoute._addFileChildren(GuestRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof GuestRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/': typeof AuthenticatedIndexRoute
  '/login': typeof GuestloginLoginRoute
  '/two-factor': typeof GuestloginTwoFactorRoute
  '/verify-email/$token': typeof GuestVerifyEmailTokenRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
  '/administrations/roles/create': typeof AuthenticatedAdministrationsRolesCreateRoute
  '/pilotages/holidays/create': typeof AuthenticatedPilotagesHolidaysCreateRoute
  '/pilotages/sectors/create': typeof AuthenticatedPilotagesSectorsCreateRoute
  '/pilotages/services/create': typeof AuthenticatedPilotagesServicesCreateRoute
  '/pilotages/teams/create': typeof AuthenticatedPilotagesTeamsCreateRoute
  '/pilotages/users/create': typeof AuthenticatedPilotagesUsersCreateRoute
  '/administrations/roles': typeof AuthenticatedAdministrationsRolesIndexRoute
  '/pilotages/holidays': typeof AuthenticatedPilotagesHolidaysIndexRoute
  '/pilotages/sectors': typeof AuthenticatedPilotagesSectorsIndexRoute
  '/pilotages/services': typeof AuthenticatedPilotagesServicesIndexRoute
  '/pilotages/teams': typeof AuthenticatedPilotagesTeamsIndexRoute
  '/pilotages/users': typeof AuthenticatedPilotagesUsersIndexRoute
  '/administrations/roles/update/$id': typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  '/pilotages/holidays/update/$id': typeof AuthenticatedPilotagesHolidaysUpdateIdRoute
  '/pilotages/sectors/update/$id': typeof AuthenticatedPilotagesSectorsUpdateIdRoute
  '/pilotages/services/update/$id': typeof AuthenticatedPilotagesServicesUpdateIdRoute
  '/pilotages/teams/update/$id': typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

export interface FileRoutesByTo {
  '': typeof GuestRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/': typeof AuthenticatedIndexRoute
  '/login': typeof GuestloginLoginRoute
  '/two-factor': typeof GuestloginTwoFactorRoute
  '/verify-email/$token': typeof GuestVerifyEmailTokenRoute
  '/profile': typeof AuthenticatedProfileIndexRoute
  '/administrations/roles/create': typeof AuthenticatedAdministrationsRolesCreateRoute
  '/pilotages/holidays/create': typeof AuthenticatedPilotagesHolidaysCreateRoute
  '/pilotages/sectors/create': typeof AuthenticatedPilotagesSectorsCreateRoute
  '/pilotages/services/create': typeof AuthenticatedPilotagesServicesCreateRoute
  '/pilotages/teams/create': typeof AuthenticatedPilotagesTeamsCreateRoute
  '/pilotages/users/create': typeof AuthenticatedPilotagesUsersCreateRoute
  '/administrations/roles': typeof AuthenticatedAdministrationsRolesIndexRoute
  '/pilotages/holidays': typeof AuthenticatedPilotagesHolidaysIndexRoute
  '/pilotages/sectors': typeof AuthenticatedPilotagesSectorsIndexRoute
  '/pilotages/services': typeof AuthenticatedPilotagesServicesIndexRoute
  '/pilotages/teams': typeof AuthenticatedPilotagesTeamsIndexRoute
  '/pilotages/users': typeof AuthenticatedPilotagesUsersIndexRoute
  '/administrations/roles/update/$id': typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  '/pilotages/holidays/update/$id': typeof AuthenticatedPilotagesHolidaysUpdateIdRoute
  '/pilotages/sectors/update/$id': typeof AuthenticatedPilotagesSectorsUpdateIdRoute
  '/pilotages/services/update/$id': typeof AuthenticatedPilotagesServicesUpdateIdRoute
  '/pilotages/teams/update/$id': typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_guest': typeof GuestRouteWithChildren
  '/unauthorized': typeof UnauthorizedRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/_guest/(login)/login': typeof GuestloginLoginRoute
  '/_guest/(login)/two-factor': typeof GuestloginTwoFactorRoute
  '/_guest/verify-email/$token': typeof GuestVerifyEmailTokenRoute
  '/_authenticated/profile/': typeof AuthenticatedProfileIndexRoute
  '/_authenticated/administrations/roles/create': typeof AuthenticatedAdministrationsRolesCreateRoute
  '/_authenticated/pilotages/holidays/create': typeof AuthenticatedPilotagesHolidaysCreateRoute
  '/_authenticated/pilotages/sectors/create': typeof AuthenticatedPilotagesSectorsCreateRoute
  '/_authenticated/pilotages/services/create': typeof AuthenticatedPilotagesServicesCreateRoute
  '/_authenticated/pilotages/teams/create': typeof AuthenticatedPilotagesTeamsCreateRoute
  '/_authenticated/pilotages/users/create': typeof AuthenticatedPilotagesUsersCreateRoute
  '/_authenticated/administrations/roles/': typeof AuthenticatedAdministrationsRolesIndexRoute
  '/_authenticated/pilotages/holidays/': typeof AuthenticatedPilotagesHolidaysIndexRoute
  '/_authenticated/pilotages/sectors/': typeof AuthenticatedPilotagesSectorsIndexRoute
  '/_authenticated/pilotages/services/': typeof AuthenticatedPilotagesServicesIndexRoute
  '/_authenticated/pilotages/teams/': typeof AuthenticatedPilotagesTeamsIndexRoute
  '/_authenticated/pilotages/users/': typeof AuthenticatedPilotagesUsersIndexRoute
  '/_authenticated/administrations/roles/update/$id': typeof AuthenticatedAdministrationsRolesUpdateIdRoute
  '/_authenticated/pilotages/holidays/update/$id': typeof AuthenticatedPilotagesHolidaysUpdateIdRoute
  '/_authenticated/pilotages/sectors/update/$id': typeof AuthenticatedPilotagesSectorsUpdateIdRoute
  '/_authenticated/pilotages/services/update/$id': typeof AuthenticatedPilotagesServicesUpdateIdRoute
  '/_authenticated/pilotages/teams/update/$id': typeof AuthenticatedPilotagesTeamsUpdateIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/unauthorized'
    | '/'
    | '/login'
    | '/two-factor'
    | '/verify-email/$token'
    | '/profile'
    | '/administrations/roles/create'
    | '/pilotages/holidays/create'
    | '/pilotages/sectors/create'
    | '/pilotages/services/create'
    | '/pilotages/teams/create'
    | '/pilotages/users/create'
    | '/administrations/roles'
    | '/pilotages/holidays'
    | '/pilotages/sectors'
    | '/pilotages/services'
    | '/pilotages/teams'
    | '/pilotages/users'
    | '/administrations/roles/update/$id'
    | '/pilotages/holidays/update/$id'
    | '/pilotages/sectors/update/$id'
    | '/pilotages/services/update/$id'
    | '/pilotages/teams/update/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/unauthorized'
    | '/'
    | '/login'
    | '/two-factor'
    | '/verify-email/$token'
    | '/profile'
    | '/administrations/roles/create'
    | '/pilotages/holidays/create'
    | '/pilotages/sectors/create'
    | '/pilotages/services/create'
    | '/pilotages/teams/create'
    | '/pilotages/users/create'
    | '/administrations/roles'
    | '/pilotages/holidays'
    | '/pilotages/sectors'
    | '/pilotages/services'
    | '/pilotages/teams'
    | '/pilotages/users'
    | '/administrations/roles/update/$id'
    | '/pilotages/holidays/update/$id'
    | '/pilotages/sectors/update/$id'
    | '/pilotages/services/update/$id'
    | '/pilotages/teams/update/$id'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_guest'
    | '/unauthorized'
    | '/_authenticated/'
    | '/_guest/(login)/login'
    | '/_guest/(login)/two-factor'
    | '/_guest/verify-email/$token'
    | '/_authenticated/profile/'
    | '/_authenticated/administrations/roles/create'
    | '/_authenticated/pilotages/holidays/create'
    | '/_authenticated/pilotages/sectors/create'
    | '/_authenticated/pilotages/services/create'
    | '/_authenticated/pilotages/teams/create'
    | '/_authenticated/pilotages/users/create'
    | '/_authenticated/administrations/roles/'
    | '/_authenticated/pilotages/holidays/'
    | '/_authenticated/pilotages/sectors/'
    | '/_authenticated/pilotages/services/'
    | '/_authenticated/pilotages/teams/'
    | '/_authenticated/pilotages/users/'
    | '/_authenticated/administrations/roles/update/$id'
    | '/_authenticated/pilotages/holidays/update/$id'
    | '/_authenticated/pilotages/sectors/update/$id'
    | '/_authenticated/pilotages/services/update/$id'
    | '/_authenticated/pilotages/teams/update/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  GuestRoute: typeof GuestRouteWithChildren
  UnauthorizedRoute: typeof UnauthorizedRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  GuestRoute: GuestRouteWithChildren,
  UnauthorizedRoute: UnauthorizedRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated",
        "/_guest",
        "/unauthorized"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/",
        "/_authenticated/profile/",
        "/_authenticated/administrations/roles/create",
        "/_authenticated/pilotages/holidays/create",
        "/_authenticated/pilotages/sectors/create",
        "/_authenticated/pilotages/services/create",
        "/_authenticated/pilotages/teams/create",
        "/_authenticated/pilotages/users/create",
        "/_authenticated/administrations/roles/",
        "/_authenticated/pilotages/holidays/",
        "/_authenticated/pilotages/sectors/",
        "/_authenticated/pilotages/services/",
        "/_authenticated/pilotages/teams/",
        "/_authenticated/pilotages/users/",
        "/_authenticated/administrations/roles/update/$id",
        "/_authenticated/pilotages/holidays/update/$id",
        "/_authenticated/pilotages/sectors/update/$id",
        "/_authenticated/pilotages/services/update/$id",
        "/_authenticated/pilotages/teams/update/$id"
      ]
    },
    "/_guest": {
      "filePath": "_guest.tsx",
      "children": [
        "/_guest/(login)/login",
        "/_guest/(login)/two-factor",
        "/_guest/verify-email/$token"
      ]
    },
    "/unauthorized": {
      "filePath": "unauthorized.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/_guest/(login)/login": {
      "filePath": "_guest/(login)/login.tsx",
      "parent": "/_guest"
    },
    "/_guest/(login)/two-factor": {
      "filePath": "_guest/(login)/two-factor.tsx",
      "parent": "/_guest"
    },
    "/_guest/verify-email/$token": {
      "filePath": "_guest/verify-email/$token.tsx",
      "parent": "/_guest"
    },
    "/_authenticated/profile/": {
      "filePath": "_authenticated/profile/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/administrations/roles/create": {
      "filePath": "_authenticated/administrations/roles/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/holidays/create": {
      "filePath": "_authenticated/pilotages/holidays/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/sectors/create": {
      "filePath": "_authenticated/pilotages/sectors/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/services/create": {
      "filePath": "_authenticated/pilotages/services/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/teams/create": {
      "filePath": "_authenticated/pilotages/teams/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/users/create": {
      "filePath": "_authenticated/pilotages/users/create.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/administrations/roles/": {
      "filePath": "_authenticated/administrations/roles/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/holidays/": {
      "filePath": "_authenticated/pilotages/holidays/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/sectors/": {
      "filePath": "_authenticated/pilotages/sectors/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/services/": {
      "filePath": "_authenticated/pilotages/services/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/teams/": {
      "filePath": "_authenticated/pilotages/teams/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/users/": {
      "filePath": "_authenticated/pilotages/users/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/administrations/roles/update/$id": {
      "filePath": "_authenticated/administrations/roles/update/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/holidays/update/$id": {
      "filePath": "_authenticated/pilotages/holidays/update/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/sectors/update/$id": {
      "filePath": "_authenticated/pilotages/sectors/update/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/services/update/$id": {
      "filePath": "_authenticated/pilotages/services/update/$id.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/pilotages/teams/update/$id": {
      "filePath": "_authenticated/pilotages/teams/update/$id.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
